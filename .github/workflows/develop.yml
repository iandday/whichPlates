name: Develop

on: 
  push:
    branches-ignore:
      - 'main'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]#, "3.9", "3.8"]
    steps:
    - uses: actions/checkout@v3.3.0
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.5.0
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python${{ matrix.python-version }} -m venv env
        source env/bin/activate
        python -m pip install --upgrade pip setuptools
        python -m pip install ".[dev]"
    
    - name: "Static analysis: pylint"
      run: |
        source env/bin/activate
        pylint -d C0301 $(git ls-files '*.py')
    - name: "Static analysis: mypy"
      run: |
        source env/bin/activate
        python -m mypy src/minio_keygen/*.py
    - name: "Static analysis: flake8"
      run: |
        source env/bin/activate
        flake8 --statistics --count --max-line-length=130 --max-complexity 8 src/minio_keygen/*.py
    - name: "Static analysis: safety"
      run: |
        source env/bin/activate
        safety check
    - name: "Test: pytest"
      run: |
        source env/bin/activate
        py.test --verbose
    - name: "Test: coverage"
      run: |
        source env/bin/activate
        pytest --cov minio_keygen
    - name: Build package
      run: |
        source env/bin/activate
        python -m build

    - name: Archive package
      uses: actions/upload-artifact@v3
      with:
        name: minio_keygen
        path: dist/

    - name: Publish distribution to Test PyPI
      uses: pypa/gh-action-pypi-publish@v1.6.4
      if: github.repository == 'iandday/minio-keygen' && matrix.python-version == '3.10'
      continue-on-error: true
      with:
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/