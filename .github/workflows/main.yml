name: "Test, Build, Publish: Main"

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_test_publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]#, "3.9", "3.8"]
    steps:
    - uses: actions/checkout@v3.3.0
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.5.0
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python${{ matrix.python-version }} -m venv env
        source env/bin/activate
        python -m pip install --upgrade pip setuptools
        python -m pip install ".[dev]"
    
    - name: "Static analysis: pylint"
      run: |
        source env/bin/activate
        pylint -d C0301 $(git ls-files '*.py')

    - name: "Static analysis: mypy"
      run: |
        source env/bin/activate
        python -m mypy src/which_plates/*.py

    - name: "Static analysis: flake8"
      run: |
        source env/bin/activate
        flake8 --statistics --count --max-line-length=130 --max-complexity 8 src/which_plates/*.py

    - name: "Static analysis: safety"
      run: |
        source env/bin/activate
        safety check

    - name: "Test: pytest"
      run: |
        source env/bin/activate
        pytest --cov which_plates --junitxml=pytest.xml --cov-report=term-missing:skip-covered src/which_plates/tests/ | tee pytest-coverage.txt
    
    - name: Pytest coverage comment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: ./pytest-coverage.txt
        junitxml-path: ./pytest.xml
    
    - name: Build package
      run: |
        source env/bin/activate
        python -m build

    - name: Archive package
      uses: actions/upload-artifact@v3
      with:
        name: which_plates
        path: dist/

    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@v1.6.4
      if: github.repository == 'iandday/whichPlates' && matrix.python-version == '3.10' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
  update_coverage_on_readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
    
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4.5.0
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python${{ matrix.python-version }} -m venv env
          source env/bin/activate
          python -m pip install --upgrade pip setuptools
          python -m pip install ".[dev]"`

      - name: "Test: pytest"
        run: |
          source env/bin/activate
          pytest --cov which_plates --junitxml=pytest.xml --cov-report=term-missing:skip-covered src/which_plates/tests/ | tee pytest-coverage.txt
      
      - name: Pytest coverage comment
        if: ${{ github.ref == 'refs/heads/main' }}
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          hide-comment: true
          pytest-coverage-path: ./pytest-coverage.txt

      - name: Update Readme with Coverage Html
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          sed -i '/<!-- Pytest Coverage Comment:Begin -->/,/<!-- Pytest Coverage Comment:End -->/c\<!-- Pytest Coverage Comment:Begin -->\n\${{ steps.coverageComment.outputs.coverageHtml }}\n<!-- Pytest Coverage Comment:End -->' ./README.md

      - name: Commit & Push changes to Readme
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions-js/push@master
        with:
          message: Update coverage on Readme
          github_token: ${{ secrets.PERSONAL_TOKEN }}